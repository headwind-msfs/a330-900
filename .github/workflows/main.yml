name: main
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      A32NX_PRODUCTION_BUILD: 1
      A32NX_INSTRUMENTS_BUILD_WORKERS: 2
      MASTER_PRE_RELEASE_ID: 64726915
      MASTER_PRE_RELEASE_TAG: vmain
      MASTER_ZIP_NAME: HEADWIND-A330-900-main.zip
      BUILD_DIR_NAME: vmain
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set BUILT_DATE_TIME
        run: echo "BUILT_DATE_TIME=$(date -u -Iseconds)" >> $GITHUB_ENV
      - name: Create .env file
        run: |
          echo A32NX_PRODUCTION_BUILD=1 >> .env
          echo CLIENT_ID=${{ secrets.NAVIGRAPH_CLIENT_ID }} >> .env
          echo CLIENT_SECRET=${{ secrets.NAVIGRAPH_CLIENT_SECRET }} >> .env
          echo CHARTFOX_SECRET=${{ secrets.CHARTFOX_SECRET }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
      - name: Build A330-900
        run: |
          ./scripts/dev-env/run.sh ./scripts/setup.sh
          ./scripts/dev-env/run.sh ./scripts/build.sh --no-tty -j 4
      - name: Build ZIP files
        run: |
          ./scripts/dev-env/run.sh node ./scripts/fragment.js
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: ${{ env.MASTER_PRE_RELEASE_TAG }}
          assets: '*'
      - name: Upload Assets to vmain
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_id: ${{ env.MASTER_PRE_RELEASE_ID }}
          assets_path: ./build-modules/
      - name: Update vmain pre-release body
        run: |
          curl --request PATCH \
            --url 'https://api.github.com/repos/${{ github.repository }}/releases/${{ env.MASTER_PRE_RELEASE_ID }}' \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
              "body": "This pre-release has its asset updated on every commit to the main branch\nLast updated on ${{ env.BUILT_DATE_TIME }} from commit ${{ github.sha }}\nThis link will always point to the latest main build: https://github.com/${{ github.repository }}/releases/download/${{ env.MASTER_PRE_RELEASE_TAG }}/full.zip"
            }'